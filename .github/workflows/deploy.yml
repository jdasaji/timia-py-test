name: Deploy to AWS Lambda with ECR

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
                
      - name: Debug AWS Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID} -"
          echo "AWS_SECRET_ACCESS_KEY length: ${#AWS_SECRET_ACCESS_KEY}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 107340132840.dkr.ecr.us-east-1.amazonaws.com

      - name: Ensure ECR Repository Exists
        run: |
          REPO_NAME="my-lambda-image"
          AWS_REGION="us-east-1"
          
          echo "ðŸ“Œ Verificando si el repositorio $REPO_NAME existe..."
          if aws ecr describe-repositories --repository-names $REPO_NAME --region $AWS_REGION > /dev/null 2>&1; then
            echo "âœ… Repositorio $REPO_NAME ya existe."
          else
            echo "ðŸš€ Repositorio no encontrado, creÃ¡ndolo ahora..."
            aws ecr create-repository --repository-name $REPO_NAME --region $AWS_REGION
            echo "âœ… Repositorio $REPO_NAME creado exitosamente."
          fi

      - name: Build and Push Docker Image
        run: |
          docker build -t my-lambda-image .
          docker tag my-lambda-image 107340132840.dkr.ecr.us-east-1.amazonaws.com/my-lambda-image:latest
          docker push 107340132840.dkr.ecr.us-east-1.amazonaws.com/my-lambda-image:latest

      - name: Check if Lambda Function Exists and Create if Needed
        run: |
          FUNCTION_NAME="my-lambda-function"
          IMAGE_URI="107340132840.dkr.ecr.us-east-1.amazonaws.com/my-lambda-image:latest"
          ROLE_ARN="arn:aws:iam::107340132840:role/rol-lambda-call-functions"

          if ! aws lambda get-function --function-name $FUNCTION_NAME; then
            echo "La funciÃ³n no existe. CreÃ¡ndola..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --package-type Image \
              --code ImageUri=$IMAGE_URI \
              --role $ROLE_ARN \
              --memory-size 512 \
              --timeout 15
          else
            echo "La funciÃ³n ya existe."
          fi

      - name: Deploy Lambda
        run: |
          aws lambda update-function-code \
            --function-name my-lambda-function \
            --image-uri 107340132840.dkr.ecr.us-east-1.amazonaws.com/my-lambda-image:latest

      - name: Create EventBridge Rule to Trigger Lambda Every Minute
        run: |
          FUNCTION_NAME="my-lambda-function"  # Nombre de la funciÃ³n Lambda
          EVENT_NAME="LambdaEveryMinuteEvent"
          CRON_EXPRESSION="rate(1 minute)"

          # Crear la regla de EventBridge que se ejecutarÃ¡ cada minuto
          aws events put-rule \
            --name $EVENT_NAME \
            --schedule-expression "$CRON_EXPRESSION" \
            --state ENABLED \
            --region us-east-1
          
          echo "âœ… EventBridge rule created to trigger Lambda every minute."

          # Asociar la Lambda a la regla de EventBridge
          aws events put-targets \
            --rule $EVENT_NAME \
            --targets "Id"="1","Arn"="arn:aws:lambda:us-east-1:107340132840:function:$FUNCTION_NAME" \
            --region us-east-1

          echo "âœ… Lambda function associated with the EventBridge rule."
      - name: Add Permission for EventBridge to Invoke Lambda (Only if it doesn't exist)
        run: |
          # Verificar si el permiso ya existe
          PERMISSION_EXISTS=$(aws lambda get-policy --function-name my-lambda-function --region us-east-1 --query "Policy.Statement[?Sid=='EventBridgeInvokePermission']" --output text)

          if [ "$PERMISSION_EXISTS" == "None" ]; then
            # Si no existe, agregar el permiso
            aws lambda add-permission \
              --function-name my-lambda-function \
              --principal events.amazonaws.com \
              --statement-id "EventBridgeInvokePermission" \
              --action "lambda:InvokeFunction" \
              --source-arn "arn:aws:events:us-east-1:107340132840:rule/LambdaEveryMinuteEvent" \
              --region us-east-1
            echo "âœ… Permissions added for EventBridge to invoke the Lambda function."
          else
            echo "El permiso ya existe, no es necesario agregarlo."
          fi      


